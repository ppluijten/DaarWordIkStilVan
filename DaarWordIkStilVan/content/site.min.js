function sendEmail(e){var t=$(e),i=$("#name").val(),n=$("#email").val(),a=$("#message").val(),r=!0;if(0===i.length?($("#namevalid").html("Vul a.u.b. uw naam in."),r=!1):$("#namevalid").html(""),0===n.length||n.indexOf("@")===-1||n.indexOf(".")===-1?($("#emailvalid").html("Vul a.u.b. een geldig e-mailadres in."),r=!1):$("#emailvalid").html(""),0===a.length?($("#messagevalid").html("Vul a.u.b. een bericht in."),r=!1):$("#messagevalid").html(""),r){t.prop("disabled",!0),t.text("Uw bericht wordt verstuurd...");var l={name:i,email:n,message:a},o=JSON.stringify(l);$.post("api/email.php",o,function(e){e?$("#contactform").html("<h1>Contact</h1><p>Uw bericht is verzonden.</p>"):$("#contactform").html("<h1>Contact</h1><p>Uw bericht kon niet verzonden worden, probeer het later a.u.b. opnieuw.</p>")})}}function subscribeToNewsletter(e){var t=$(e),i=$("#name").val(),n=$("#email").val(),a=!0;if($("#valid").html(""),0===i.length&&($("#valid").append("Vul a.u.b. uw naam in.<br />"),a=!1),0!==n.length&&n.indexOf("@")!==-1&&n.indexOf(".")!==-1||($("#valid").append("Vul a.u.b. een geldig e-mailadres in."),a=!1),a){t.prop("disabled",!0),t.text("U wordt aangemeld...");var r={name:i,email:n},l=JSON.stringify(r);$.post("api/newsletter.php",l,function(e){e?$("#newsletterform").html("<h1>Nieuwsbrief</h1><p>U bent ingeschreven voor de nieuwsbrief.</p>"):$("#newsletterform").html("<h1>Contact</h1><p>U kunt op het moment niet worden ingeschreven, probeer het later a.u.b. opnieuw.</p>")})}}!function(e){function t(){var t={};return e.each(document.location.search.substr(1).split("&"),function(e,i){var n=i.split("=");null!=n[0]&&null!=n[1]&&(t[n[0].toString()]=n[1].toString())}),t}e(function(){var n=new i("pages");e("div[data-page]").each(function(){n.render(e(this))}),e("body[data-background]").each(function(){e(this).css("background-image","url('content/images/"+e(this).data("background")+".png')")});var a=t(),r=a.page;null!=r&&""!==r?e(".activities").each(function(){n.renderActivityPage(e(this),r)}):e(".activities").each(function(){n.renderActivities(e(this))})});var i=function(){function t(e){this.folder=e}return t.prototype.render=function(t){e.get(this.folder+"/"+t.data("page")+".html",function(e){t.html(e)})},t.prototype.renderActivities=function(t){var i=this,n=e("<div class='row'></div>");t.html(n),e.get(this.folder+"/activiteiten.json",function(e){for(var t=0;t<e.activities.length;t++)i.renderActivity(n,e.activities[t].name,e.activities[t].title)})},t.prototype.renderActivity=function(t,i,n){e.get(this.folder+("/activiteiten/descriptions/"+i+".html"),function(e){t.append("<div class='col-xs-12 activity'>\n                    <div class='activity-image' style='background-image: url(pages/activiteiten/images/"+i+".png);'></div>\n                    <div class='activity-description'>\n                        <h1>\n                            <a href='activiteiten.html?page="+i+"'>"+n+"</a>\n                        </h1>\n                        <p>\n                            "+e+"\n                            <a href='activiteiten.html?page="+i+"'>lees meer</a>\n                        </p>\n                    </div>\n                </div>")})},t.prototype.renderActivityPage=function(t,i){e.get(this.folder+("/activiteiten/pages/"+i+".html"),function(e){t.html(e),t.append("<p>Ben je nieuwsgierig geworden en wil je meedoen, of heb je vragen? Bel of <a href='mailto:info@daarwordikstilvan.nl'>mail</a> dan gerust!</p>"),t.addClass("jumbotron")})},t}()}(jQuery);
//# sourceMappingURL=data:application/json;base64,
